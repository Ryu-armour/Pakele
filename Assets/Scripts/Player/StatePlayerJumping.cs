using System.Collections;
using System.Collections.Generic;
using UnityEngine;

using State = StateMachine<Player>.State;

public partial class Player
{

    //ジャンプ
    public class StatePlayerJumping : State
    {
        //移動速度
        private float xSpeed,ySpeed = 0.0f;
        //ジャンプの高さ
        private float jumpPos = 0.0f;

        protected override void OnEnter(State prevState)
        {
            Debug.Log("Jumping");

            //ジャンプ開始位置の記録
            jumpPos = Owner.transform.position.y;
        }
        protected override void OnUpdate()
        {            
            //スペースキーを話したら落下状態に遷移
            if(Input.GetKeyUp(KeyCode.Space))
            {
                StateMachine.Dispatch((int)Event.Dive);
            }
            //ジャンプの最大の高さまで行ったら落下状態に遷移
            else if (Owner.transform.position.y >= jumpPos + Owner.maxJumpHeight)
            {
                StateMachine.Dispatch((int)Event.Dive);
            }

            //移動速度の決定
            SetMoveSpeed();

            //移動
            Owner.speed = new Vector2(xSpeed, ySpeed);            
        }

        //地面に着地した時の調整
        private void AdjustLanding()
        {
            var pos = Owner.transform.position;
            pos.y = Owner.transform.localScale.y * 0.5f;
            Owner.transform.position = pos;
        }

        //移動速度の決定
        private void SetMoveSpeed()
        {
            //横移動
            if (Input.GetKey(KeyCode.A))
            {
                xSpeed = -Owner.walkPower;
            }
            else if (Input.GetKey(KeyCode.D))
            {
                xSpeed = Owner.walkPower;
            }
            else
            {
                xSpeed = 0.0f;
            }

            //ジャンプ
            ySpeed = Owner.jumpPower;
        }
    }
}
